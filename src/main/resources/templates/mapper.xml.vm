<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${package.Entity}.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
    <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

    <insert id="add" parameterType="${package.Entity}.${entity}" keyProperty="id">
        insert into ${table.name}(
        #foreach($field in ${table.fields})
            #if(!${field.keyFlag})##生成普通字段
                ${field.name} #if($foreach.hasNext)
                  ,
                #end
            #end
        #end
            ) values(
        #foreach($field in ${table.fields})
            #if(!${field.keyFlag})##生成普通字段
                #if(${field.propertyName} != "createdAt" && ${field.propertyName} != "updatedAt")
                 #{${field.propertyName}}
                #else
                 now()
                #end
                #if($foreach.hasNext)
                 ,
                #end
            #end
        #end
            )
    </insert>
    <update id="update" parameterType="${package.Entity}.${entity}" keyProperty="id">
        update ${table.name} set
        #foreach($field in ${table.fields})
            #if(${field.name} != "created_at")
                #if(!${field.keyFlag})##生成普通字段
                    #if(${field.name} != "updated_at")
                        <if test="${field.propertyName} != null and ${field.propertyName} != '' ">
                            ${field.name} = #{${field.propertyName}}#if($foreach.hasNext) ,#end
                        </if>
                    #else
                      ${field.name} = now()#if($foreach.hasNext) ,#end
                    #end
                #end
            #end
        #end
          where id = #{id}
    </update>
    <delete id="delete" parameterType="int">
        delete from ${table.name} where id = #{id}
    </delete>
    <select id="selectById" resultMap="BaseResultMap">
        select * from ${table.name} where id = #{id}
    </select>
    <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="hashmap">
        select * from ${table.name} where 1=1
        #foreach($field in ${table.fields})
            #if(!${field.keyFlag})##生成普通字段
                <if test="${field.propertyName} != null and ${field.propertyName} != '' ">
                    AND ${field.name} LIKE #{${field.propertyName}}
                </if>
            #end
        #end
        limit #{pageNo}, #{pageSize}
    </select>
    <select id="selectAllBySize" resultType="java.lang.Integer" parameterType="hashmap">
        select count(id) from ${table.name} where 1=1
        #foreach($field in ${table.fields})
            #if(!${field.keyFlag})##生成普通字段
                <if test="${field.propertyName} != null and ${field.propertyName} != '' ">
                    AND ${field.name} LIKE #{${field.propertyName}}
                </if>
            #end
        #end
    </select>

#end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.commonFields})
    #if(${field.name} == ${field.propertyName})${field.name}#else${field.name} AS ${field.propertyName}#end,
#end
        ${table.fieldNames}
    </sql>

#end
</mapper>
